<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	
	
	<flow name="validationsFlow" doc:id="7be3ca6c-aec2-4a4c-a763-e53b4d701056" >
		<ee:transform doc:name="Preparing Payload" doc:id="cc627b4a-8f3e-4541-b3f7-b025ae95ba43">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
fun lookupSsn(code) = if(code == 8)('0') else if(code == 7)('00') else if(code == 6)('000') else if(code ==5)('0000') else if(code ==4)('00000') else if(code ==3)('000000') else if(code ==2)('0000000') else if(code ==1)('00000000') else(code)
---
{
NameRecord:{
FirstName: vars.ParamArray.First,
LastName: vars.ParamArray.Last,
Ssn: vars.ParamArray.Ssn,
BirthDate: vars.ParamArray.BirthDate,
AddressFull: vars.ParamArray.AddressFull,
City: vars.ParamArray.City,
State: vars.ParamArray.State,
ZipCode: vars.ParamArray.ZipCode,
MobilePhone: vars.ParamArray.MobilePhone,
HomePhone:vars.ParamArray.HomePhone,
Emailaddress:vars.ParamArray.Email,
}
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="inputPayload" ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="varCity" ><![CDATA[%dw 2.0
output application/java
---
{
	City:if(payload.NameRecord.City != null)(sizeOf(payload.NameRecord.City)) else payload.NameRecord.City,
	State: if(payload.NameRecord.State != null)(sizeOf(payload.NameRecord.State)) else (payload.NameRecord.State),
	ZipCode: if(payload.NameRecord.ZipCode != null)(sizeOf(payload.NameRecord.ZipCode)) else payload.NameRecord.ZipCode
	
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="94a21aff-ffcc-4b1c-a96e-7702bceecf62" collection="#[payload.NameRecord]">
			<ee:transform doc:name="KeyValue" doc:id="6a06ea03-3809-4be4-8b5c-31700d996af2">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/java
---

	payload pluck (value,key) ->{
			key: key,
			Value: value
		}
]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<choice doc:name="Choice" doc:id="4745699b-55b6-4b88-9d94-cc07948b1b2c">
				<when expression="#[payload.Value[0] !=null]">
					<logger level="INFO" doc:name="Logger" doc:id="3a344592-47e1-4955-99b3-58d3adab9ff1" message='#[payload.key[0] ++ " " ++ typeOf(payload.Value[0])]' />
					<choice doc:name="Choice" doc:id="478d3766-5776-4d95-8993-87e05abba0b8">
						<when expression='#[payload.key[0] != "Ssn" and payload.key[0] != "UserChar4" and payload.key[0] != "BirthDate" and
payload.key[0] != "SSNType" and payload.key[0] !="ZipCode" and payload.key[0] != "MobilePhone" and payload.key[0] != "HomePhone"
and payload.key[0] != "CreditScore"]'>
							<logger level="INFO" doc:name="Contains Alphabhet" doc:id="44739a4c-0635-437d-9d73-0ba7eda02815" message='#["Contains Alphabhets -&gt;" ++ contains(payload.Value[0], /[a-zA-Z]/)]' />
							<set-variable value="#[payload.key[0]]" doc:name="Store Key Value" doc:id="e5d31e27-1101-4e1d-8c32-c7a725d69e99" variableName="strKey" />
							<set-variable value="#[payload.Value[0]]" doc:name="Set Value" doc:id="fd22ec60-4964-4a8e-85f1-acc18510ab4b" variableName="strValue" />
							<ee:transform doc:name="String Validation" doc:id="27f7efee-820a-45b8-9514-f8da634323f0">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/java


fun lookupCheckLength(length) = 
	if(attributes.maskedRequestPath != null and attributes.maskedRequestPath == '/CreateLoanNameRecord'
	)
	(if(vars.strKey == "FirstName")(20) else if(vars.strKey == "LastName")(40) else if(vars.strKey == "Ssn")(9) else if(vars.strKey == "AddressFull")(80) else if(vars.strKey == "City")(40)
else if(vars.strKey == "State")(2) else if(vars.strKey == "Emailaddress")(40) else 100)
else(if(vars.strKey == "LastName")(255) else if(vars.strKey == "Ssn")(9) else if(vars.strKey == "AddressFull")(255) else if(vars.strKey == "City")(255)
else if(vars.strKey == "State")(255) else if(vars.strKey == "Emailaddress")(255) else 255)
---
strDescription : 
  if(contains(payload.Value[0], /[a-zA-Z]/)== false) ("please enter only alphabhets for " ++ vars.strKey)
  else if(sizeOf(vars.strValue) > lookupCheckLength(vars.strValue)) (vars.strKey ++ " max length is " ++ (lookupCheckLength(vars.strValue)))
  else ("")
]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</when>
						<otherwise>
							<logger level="INFO" doc:name="Contains Numbers" doc:id="4eef591b-c8fe-4611-a071-5f1bd6b3d0b1" message='#["Contains Numbers -&gt;" ++ contains(payload.Value[0], /[0-9]/)]' />
							<set-variable value="#[payload.key[0]]" doc:name="Store Key Value" doc:id="b591a082-c67e-49c4-a7f4-75a184d2ba3b" variableName="strNKey" />
							<logger level="INFO" doc:name="Logger" doc:id="e2c47822-f08e-4f6c-9ec6-807e07d0c6f7" message='#[payload.Value[0] replace /[!@#\$%\^\&amp;*\)\(+=._-]/ with ""]' />
							<ee:transform doc:name="Number Validation" doc:id="d5d4cafe-405b-48f9-b186-53a536f6d791">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
strDescription : if(isEmpty(payload.Value[0]) and (vars.strNKey == "MobilePhone" or vars.strNKey == "HomePhone" )) "PhoneNumEmpty" else if(contains(payload.Value[0], /[0-9]/)== false) ("please enter only Numbers for " ++ vars.strNKey) 
else if(vars.strNKey == "ZipCode")(if((sizeOf(payload.Value[0]) < 5))("ZipCode length should be 5") else (""))
else if(vars.strNKey == "MobilePhone")(if(sizeOf(payload.Value[0] replace /[!@#\$%\^\&*\)\(+=._-]/ with "") <10)("Mobile Phone length should be 10") else(if(contains(payload.Value[0],/\(([^)]+)\)/)) ("Mobile Phone improper format") else if(contains(payload.Value[0],/\(([^)]+)\)/)) ("Mobile Phone improper format") else if(payload.Value[0] contains("-"))(if((sizeOf(payload.Value[0])) != 12)("Mobile Phone length should be 10") else("")) else if((sizeOf(payload.Value[0]) != 10))("Mobile Phone length should be 10") else("")))
else if(vars.strNKey == "HomePhone")(if(sizeOf(payload.Value[0] replace /[!@#\$%\^\&*\)\(+=._-]/ with "") <10)("Home Phone length should be 10") else(if(contains(payload.Value[0],/\(([^)]+)\)/)) ("Home Phone improper format") else if(contains(payload.Value[0],/\(([^)]+)\)/)) ("Home Phone improper format") else if(payload.Value[0] contains("-"))(if((sizeOf(payload.Value[0])) != 12)("Home Phone length should be 10") else("")) else if((sizeOf(payload.Value[0]) != 10))("Home Phone length should be 10") else("")))
else if(vars.strNKey == "Ssn")(if(sizeOf(payload.Value[0]) > 9)("Ssn length should be 9") else(""))
else if(((if(vars.varCity.City != null)(vars.varCity.City) else 0) + (if(vars.varCity.State != null)(vars.varCity.State) else 0) + (if(vars.varCity.ZipCode != null)(vars.varCity.ZipCode) else 0)) >40)("City, State and Zipcode max length is 40")
 
else ("")
]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</otherwise>
					</choice>
				</when>
				<otherwise>
					<ee:transform doc:name="Error Object" doc:id="453aefe5-ecd4-4655-9d58-5bd692ebaa89">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
strDescription : payload.key[0] ++ " field should not be null"]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</otherwise>
			</choice>
			<choice doc:name="Choice" doc:id="39117a31-9363-44df-8eb6-6af739ff6cf2">
				<when expression='#[payload.strDescription != "" and payload.strDescription != "PhoneNumEmpty"]'>
					<set-variable value='#["handledErrors"]' doc:name="Set Variable" doc:id="6a867615-95e1-4522-901d-540339f4422e" variableName="strErrorStep" />
					<raise-error doc:name="Raise error" doc:id="cee40518-3619-47cd-b604-09aa5e03a8a8" type="ANY" />
				</when>
				<when expression='#[payload.strDescription == "PhoneNumEmpty" and (vars.strNKey == "MobilePhone" or vars.strNKey == "HomePhone")]'>
					<ee:transform doc:name="SetValidationWarnings" doc:id="2caa5965-5c86-4caa-b5bd-9003fcaa2e53">
						<ee:message>
						</ee:message>
						<ee:variables>
							<ee:set-variable variableName="EndLoanResultsSet"><![CDATA[%dw 2.0
output application/json
---
[{	
	MCU_Status_Message__e: {
		
		Status: "Error-LoanNameRecordCreatedButValidPhoneNumbersAreRequired",
		"TransactionType": "CreateLoanNameRecord",
        "uuid": vars.uuid,
        "ErrorCause": "ValidationError",
        "ErrorDescription": vars.strNKey ++ "MustBeValid" ,
        "ErrorStep": vars.strNKey ++ "Validation",
         AccountNumber: vars.originalpayload.CreateLoanRecord.Request.AccountNumber default null,
         EpisysLoanId: vars.NextLoanID default null
	}
    
	}] ++ vars.EndLoanResultsSet]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</when>
			
</choice>
			<logger level="INFO" doc:name="Logger" doc:id="db8c5872-026e-4cc5-8959-dfe30e1c4b02" message="#[payload]" />
		</foreach>
	</flow>
</mule>
	